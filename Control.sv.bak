module control(input logic Clk, Reset, Run, clra_ldb,b0
					output logic clr_ld, shift,add,sum);
	//these are the states
	enum logic [4:0] 	{Start, Clear,Halt,
							Add1, Add2, Add3, Add4,Add5,Add6,Add7,
							Shift1, Shift2, Shift3, Shift4, Shift4, Shift5,Shift6,Shift7,Shift8}
							curr_state, next_state;
							
	//updates flip flop, Current state is the only one
	always_ff @ (posedge Clk)  
    begin
        if (Reset)
            curr_state <= Start;
        else 
            curr_state <= next_state;
    end
	 
	 always_comb
	 begin
		next_state  = curr_state;
		
		unique case(curr_state)
			
			Start: if(Run)
						next_state = Clear;
			Clear: 
		
	 end
				
endmodule
