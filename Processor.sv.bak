/* This module is the processor for multiplier, and it does all the wiring and instatiation. */
module processor
	(
  input logic clk, reset, run, cleara_loadb,
  input logic[7:0] s,a,b,
  output logic[6:0] AhexU, AhexL, BhexU, BhexL,
  output logic[7:0] aval, bval,
  output logic x
	);

/* Intermediate logic variables go here. */
  logic shift, add, sum, clr_ld;
  logic run_s, cleara_loadb_s;
  logic [7:0] s_s;

/* Instantiation of other modules here. */
  // two 8-bit shift registers
  register_unit reg_a(.clk_reg(clk),.reset_reg(reset),.Ld_A,.Shift_En,.D(Din_S),.A_In(newA),.A_out(opA),.A(A),);
  register_unit reg_b();
	// 9-bit adder
  
  // 9th bit module

  control control_unit
  		(
			.Clk(clk),
			.Reset(reset_s),
			.Run(run_s),
			.clra_ldb(cleara_loadb_s),
 			.clr_ld,
			.shift,
			.add,
			.sum
      );

	HexDriver HexAL (.In0(a[3:0]),.Out0(AhexL));
	HexDriver HexBL (.In0(b[3:0]),.Out0(BhexL));
	HexDriver HexAU (.In0(a[7:4]),.Out0(AhexU));
  HexDriver HexBU (.In0(b[7:4]),.Out0(BhexU));

  sync buttons_sync[2:0] (clk,{~run,~reset,~cleara_loadb},{run_s,reset_s,cleara_loadb_s});
  sync s_sync[7:0] (clk,s,s_s)

endmodule